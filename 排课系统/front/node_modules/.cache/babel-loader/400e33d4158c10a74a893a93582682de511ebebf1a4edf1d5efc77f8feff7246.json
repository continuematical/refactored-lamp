{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isFunction, map, isNumber, maxBy, get } from '@antv/util';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE } from '../constant';\n/**\n * 漏斗图 transform\n * @param geometry\n */\nexport function transformData(data, originData, options) {\n  var formatData = [];\n  var yField = options.yField,\n    maxSize = options.maxSize,\n    minSize = options.minSize;\n  var maxYFieldValue = get(maxBy(originData, yField), [yField]);\n  var max = isNumber(maxSize) ? maxSize : 1;\n  var min = isNumber(minSize) ? minSize : 0;\n  // format 数据\n  formatData = map(data, function (row, index) {\n    var percent = (row[yField] || 0) / maxYFieldValue;\n    row[FUNNEL_PERCENT] = percent;\n    row[FUNNEL_MAPPING_VALUE] = (max - min) * percent + min;\n    // 转化率数据存储前后数据\n    row[FUNNEL_CONVERSATION] = [get(data, [index - 1, yField]), row[yField]];\n    return row;\n  });\n  return formatData;\n}\n/**\n * 漏斗图通用转化率组件\n * @param getLineCoordinate 用于获取特定的 line 的位置及配置\n */\nexport function conversionTagComponent(getLineCoordinate) {\n  return function (params) {\n    var chart = params.chart,\n      options = params.options;\n    var conversionTag = options.conversionTag;\n    var data = chart.getOptions().data;\n    if (conversionTag) {\n      var formatter_1 = conversionTag.formatter;\n      data.forEach(function (obj, index) {\n        if (index <= 0 || Number.isNaN(obj[FUNNEL_MAPPING_VALUE])) return;\n        var lineOption = getLineCoordinate(obj, index, data, {\n          top: true,\n          text: {\n            content: isFunction(formatter_1) ? formatter_1(obj, data) : formatter_1,\n            offsetX: conversionTag.offsetX,\n            offsetY: conversionTag.offsetY,\n            position: 'end',\n            autoRotate: false,\n            style: __assign({\n              textAlign: 'start',\n              textBaseline: 'middle'\n            }, conversionTag.style)\n          }\n        });\n        chart.annotation().line(lineOption);\n      });\n    }\n    return params;\n  };\n}","map":{"version":3,"names":["isFunction","map","isNumber","maxBy","get","FUNNEL_PERCENT","FUNNEL_CONVERSATION","FUNNEL_MAPPING_VALUE","transformData","data","originData","options","formatData","yField","maxSize","minSize","maxYFieldValue","max","min","row","index","percent","conversionTagComponent","getLineCoordinate","params","chart","conversionTag","getOptions","formatter_1","formatter","forEach","obj","Number","isNaN","lineOption","top","text","content","offsetX","offsetY","position","autoRotate","style","__assign","textAlign","textBaseline","annotation","line"],"sources":["../../../../src/plots/funnel/geometries/common.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { isFunction, map, isNumber, maxBy, get } from '@antv/util';\nimport { Datum, Data } from '../../../types/common';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE } from '../constant';\nimport { Params } from '../../../core/adaptor';\nimport { FunnelOptions } from '../types';\n\n/**\n * 漏斗图 transform\n * @param geometry\n */\nexport function transformData(\n  data: FunnelOptions['data'],\n  originData: FunnelOptions['data'],\n  options: Pick<FunnelOptions, 'yField' | 'maxSize' | 'minSize'>\n): FunnelOptions['data'] {\n  let formatData = [];\n  const { yField, maxSize, minSize } = options;\n  const maxYFieldValue = get(maxBy(originData, yField), [yField]);\n  const max = isNumber(maxSize) ? maxSize : 1;\n  const min = isNumber(minSize) ? minSize : 0;\n\n  // format 数据\n  formatData = map(data, (row, index) => {\n    const percent = (row[yField] || 0) / maxYFieldValue;\n    row[FUNNEL_PERCENT] = percent;\n    row[FUNNEL_MAPPING_VALUE] = (max - min) * percent + min;\n    // 转化率数据存储前后数据\n    row[FUNNEL_CONVERSATION] = [get(data, [index - 1, yField]), row[yField]];\n    return row;\n  });\n\n  return formatData;\n}\n\n/**\n * 漏斗图通用转化率组件\n * @param getLineCoordinate 用于获取特定的 line 的位置及配置\n */\nexport function conversionTagComponent(\n  getLineCoordinate: (\n    datum: Datum,\n    datumIndex: number,\n    data: Data,\n    initLineOption: Record<string, any>\n  ) => Types.LineOption\n) {\n  return function (params: Params<FunnelOptions>): Params<FunnelOptions> {\n    const { chart, options } = params;\n    const { conversionTag } = options;\n\n    const { data } = chart.getOptions();\n\n    if (conversionTag) {\n      const { formatter } = conversionTag;\n      data.forEach((obj, index) => {\n        if (index <= 0 || Number.isNaN(obj[FUNNEL_MAPPING_VALUE])) return;\n        const lineOption = getLineCoordinate(obj, index, data, {\n          top: true,\n          text: {\n            content: isFunction(formatter) ? formatter(obj, data) : formatter,\n            offsetX: conversionTag.offsetX,\n            offsetY: conversionTag.offsetY,\n            position: 'end',\n            autoRotate: false,\n            style: {\n              textAlign: 'start',\n              textBaseline: 'middle',\n              ...conversionTag.style,\n            },\n          },\n        });\n\n        chart.annotation().line(lineOption);\n      });\n    }\n    return params;\n  };\n}\n"],"mappings":";AACA,SAASA,UAAU,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,GAAG,QAAQ,YAAY;AAElE,SAASC,cAAc,EAAEC,mBAAmB,EAAEC,oBAAoB,QAAQ,aAAa;AAIvF;;;;AAIA,OAAM,SAAUC,aAAaA,CAC3BC,IAA2B,EAC3BC,UAAiC,EACjCC,OAA8D;EAE9D,IAAIC,UAAU,GAAG,EAAE;EACX,IAAAC,MAAM,GAAuBF,OAAO,CAAAE,MAA9B;IAAEC,OAAO,GAAcH,OAAO,CAAAG,OAArB;IAAEC,OAAO,GAAKJ,OAAO,CAAAI,OAAZ;EAChC,IAAMC,cAAc,GAAGZ,GAAG,CAACD,KAAK,CAACO,UAAU,EAAEG,MAAM,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAC/D,IAAMI,GAAG,GAAGf,QAAQ,CAACY,OAAO,CAAC,GAAGA,OAAO,GAAG,CAAC;EAC3C,IAAMI,GAAG,GAAGhB,QAAQ,CAACa,OAAO,CAAC,GAAGA,OAAO,GAAG,CAAC;EAE3C;EACAH,UAAU,GAAGX,GAAG,CAACQ,IAAI,EAAE,UAACU,GAAG,EAAEC,KAAK;IAChC,IAAMC,OAAO,GAAG,CAACF,GAAG,CAACN,MAAM,CAAC,IAAI,CAAC,IAAIG,cAAc;IACnDG,GAAG,CAACd,cAAc,CAAC,GAAGgB,OAAO;IAC7BF,GAAG,CAACZ,oBAAoB,CAAC,GAAG,CAACU,GAAG,GAAGC,GAAG,IAAIG,OAAO,GAAGH,GAAG;IACvD;IACAC,GAAG,CAACb,mBAAmB,CAAC,GAAG,CAACF,GAAG,CAACK,IAAI,EAAE,CAACW,KAAK,GAAG,CAAC,EAAEP,MAAM,CAAC,CAAC,EAAEM,GAAG,CAACN,MAAM,CAAC,CAAC;IACxE,OAAOM,GAAG;EACZ,CAAC,CAAC;EAEF,OAAOP,UAAU;AACnB;AAEA;;;;AAIA,OAAM,SAAUU,sBAAsBA,CACpCC,iBAKqB;EAErB,OAAO,UAAUC,MAA6B;IACpC,IAAAC,KAAK,GAAcD,MAAM,CAAAC,KAApB;MAAEd,OAAO,GAAKa,MAAM,CAAAb,OAAX;IACd,IAAAe,aAAa,GAAKf,OAAO,CAAAe,aAAZ;IAEb,IAAAjB,IAAI,GAAKgB,KAAK,CAACE,UAAU,EAAE,CAAAlB,IAAvB;IAEZ,IAAIiB,aAAa,EAAE;MACT,IAAAE,WAAS,GAAKF,aAAa,CAAAG,SAAlB;MACjBpB,IAAI,CAACqB,OAAO,CAAC,UAACC,GAAG,EAAEX,KAAK;QACtB,IAAIA,KAAK,IAAI,CAAC,IAAIY,MAAM,CAACC,KAAK,CAACF,GAAG,CAACxB,oBAAoB,CAAC,CAAC,EAAE;QAC3D,IAAM2B,UAAU,GAAGX,iBAAiB,CAACQ,GAAG,EAAEX,KAAK,EAAEX,IAAI,EAAE;UACrD0B,GAAG,EAAE,IAAI;UACTC,IAAI,EAAE;YACJC,OAAO,EAAErC,UAAU,CAAC4B,WAAS,CAAC,GAAGA,WAAS,CAACG,GAAG,EAAEtB,IAAI,CAAC,GAAGmB,WAAS;YACjEU,OAAO,EAAEZ,aAAa,CAACY,OAAO;YAC9BC,OAAO,EAAEb,aAAa,CAACa,OAAO;YAC9BC,QAAQ,EAAE,KAAK;YACfC,UAAU,EAAE,KAAK;YACjBC,KAAK,EAAAC,QAAA;cACHC,SAAS,EAAE,OAAO;cAClBC,YAAY,EAAE;YAAQ,GACnBnB,aAAa,CAACgB,KAAK;;SAG3B,CAAC;QAEFjB,KAAK,CAACqB,UAAU,EAAE,CAACC,IAAI,CAACb,UAAU,CAAC;MACrC,CAAC,CAAC;;IAEJ,OAAOV,MAAM;EACf,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}