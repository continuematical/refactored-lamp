{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { VIEW_LIFE_CIRCLE, Event } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { getProgressData } from '../progress/utils';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nvar RingProgress = /** @class */function (_super) {\n  __extends(RingProgress, _super);\n  function RingProgress() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'ring-process';\n    return _this;\n  }\n  /**\n   * 获取默认配置项\n   * 供外部使用\n   */\n  RingProgress.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * 更新数据\n   * @param percent\n   */\n  RingProgress.prototype.changeData = function (percent) {\n    this.chart.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null));\n    this.updateOption({\n      percent: percent\n    });\n    this.chart.data(getProgressData(percent));\n    // todo 后续让 G2 层在 afterrender 之后，来重绘 annotations\n    statistic({\n      chart: this.chart,\n      options: this.options\n    }, true);\n    this.chart.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null));\n  };\n  RingProgress.prototype.getDefaultOptions = function () {\n    return RingProgress.getDefaultOptions();\n  };\n  /**\n   * 获取 环形进度图 的适配器\n   */\n  RingProgress.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  return RingProgress;\n}(Plot);\nexport { RingProgress };","map":{"version":3,"names":["VIEW_LIFE_CIRCLE","Event","Plot","getProgressData","adaptor","statistic","DEFAULT_OPTIONS","RingProgress","_super","__extends","_this","apply","arguments","type","getDefaultOptions","prototype","changeData","percent","chart","emit","BEFORE_CHANGE_DATA","fromData","updateOption","data","options","AFTER_CHANGE_DATA","getSchemaAdaptor"],"sources":["../../../src/plots/ring-progress/index.ts"],"sourcesContent":["import { VIEW_LIFE_CIRCLE, Event } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { getProgressData } from '../progress/utils';\nimport { RingProgressOptions } from './types';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n\nexport type { RingProgressOptions };\n\nexport class RingProgress extends Plot<RingProgressOptions> {\n  /**\n   * 获取默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<RingProgressOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'ring-process';\n\n  /**\n   * 更新数据\n   * @param percent\n   */\n  public changeData(percent: number) {\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null)\n    );\n    this.updateOption({ percent });\n\n    this.chart.data(getProgressData(percent));\n    // todo 后续让 G2 层在 afterrender 之后，来重绘 annotations\n    statistic({ chart: this.chart, options: this.options }, true);\n\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null)\n    );\n  }\n\n  protected getDefaultOptions() {\n    return RingProgress.getDefaultOptions();\n  }\n\n  /**\n   * 获取 环形进度图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<RingProgressOptions> {\n    return adaptor;\n  }\n}\n"],"mappings":";AAAA,SAASA,gBAAgB,EAAEC,KAAK,QAAQ,UAAU;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AAEtC,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,SAASC,OAAO,EAAEC,SAAS,QAAQ,WAAW;AAC9C,SAASC,eAAe,QAAQ,aAAa;AAI7C,IAAAC,YAAA,0BAAAC,MAAA;EAAkCC,SAAA,CAAAF,YAAA,EAAAC,MAAA;EAAlC,SAAAD,aAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IASE;IACOF,KAAA,CAAAG,IAAI,GAAW,cAAc;;EAiCtC;EA1CE;;;;EAION,YAAA,CAAAO,iBAAiB,GAAxB;IACE,OAAOR,eAAe;EACxB,CAAC;EAKD;;;;EAIOC,YAAA,CAAAQ,SAAA,CAAAC,UAAU,GAAjB,UAAkBC,OAAe;IAC/B,IAAI,CAACC,KAAK,CAACC,IAAI,CACbnB,gBAAgB,CAACoB,kBAAkB,EACnCnB,KAAK,CAACoB,QAAQ,CAAC,IAAI,CAACH,KAAK,EAAElB,gBAAgB,CAACoB,kBAAkB,EAAE,IAAI,CAAC,CACtE;IACD,IAAI,CAACE,YAAY,CAAC;MAAEL,OAAO,EAAAA;IAAA,CAAE,CAAC;IAE9B,IAAI,CAACC,KAAK,CAACK,IAAI,CAACpB,eAAe,CAACc,OAAO,CAAC,CAAC;IACzC;IACAZ,SAAS,CAAC;MAAEa,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEM,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,EAAE,IAAI,CAAC;IAE7D,IAAI,CAACN,KAAK,CAACC,IAAI,CACbnB,gBAAgB,CAACyB,iBAAiB,EAClCxB,KAAK,CAACoB,QAAQ,CAAC,IAAI,CAACH,KAAK,EAAElB,gBAAgB,CAACyB,iBAAiB,EAAE,IAAI,CAAC,CACrE;EACH,CAAC;EAESlB,YAAA,CAAAQ,SAAA,CAAAD,iBAAiB,GAA3B;IACE,OAAOP,YAAY,CAACO,iBAAiB,EAAE;EACzC,CAAC;EAED;;;EAGUP,YAAA,CAAAQ,SAAA,CAAAW,gBAAgB,GAA1B;IACE,OAAOtB,OAAO;EAChB,CAAC;EACH,OAAAG,YAAC;AAAD,CAAC,CA3CiCL,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}