{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { transformData } from './utils';\nimport { DEFAULT_OPTIONS, OUTLIERS_VIEW_ID } from './constant';\nvar Box = /** @class */function (_super) {\n  __extends(Box, _super);\n  function Box() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'box';\n    return _this;\n  }\n  /**\n   * 获取 默认配置项\n   * 供外部使用\n   */\n  Box.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   * @param data\n   */\n  Box.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    var yField = this.options.yField;\n    var outliersView = this.chart.views.find(function (v) {\n      return v.id === OUTLIERS_VIEW_ID;\n    });\n    if (outliersView) {\n      outliersView.data(data);\n    }\n    this.chart.changeData(transformData(data, yField));\n  };\n  /**\n   * 获取 箱型图 默认配置项\n   */\n  Box.prototype.getDefaultOptions = function () {\n    return Box.getDefaultOptions();\n  };\n  /**\n   * 获取 箱型图 的适配器\n   */\n  Box.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  return Box;\n}(Plot);\nexport { Box };","map":{"version":3,"names":["Plot","adaptor","transformData","DEFAULT_OPTIONS","OUTLIERS_VIEW_ID","Box","_super","__extends","_this","apply","arguments","type","getDefaultOptions","prototype","changeData","data","updateOption","yField","options","outliersView","chart","views","find","v","id","getSchemaAdaptor"],"sources":["../../../src/plots/box/index.ts"],"sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { BoxOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { transformData } from './utils';\nimport { DEFAULT_OPTIONS, OUTLIERS_VIEW_ID } from './constant';\nexport type { BoxOptions };\n\nexport class Box extends Plot<BoxOptions> {\n  /**\n   * 获取 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<BoxOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'box';\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data) {\n    this.updateOption({ data });\n    const { yField } = this.options;\n\n    const outliersView = this.chart.views.find((v) => v.id === OUTLIERS_VIEW_ID);\n    if (outliersView) {\n      outliersView.data(data);\n    }\n\n    this.chart.changeData(transformData(data, yField));\n  }\n\n  /**\n   * 获取 箱型图 默认配置项\n   */\n  protected getDefaultOptions(): Partial<BoxOptions> {\n    return Box.getDefaultOptions();\n  }\n\n  /**\n   * 获取 箱型图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<BoxOptions> {\n    return adaptor;\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,iBAAiB;AAGtC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,aAAa,QAAQ,SAAS;AACvC,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,YAAY;AAG9D,IAAAC,GAAA,0BAAAC,MAAA;EAAyBC,SAAA,CAAAF,GAAA,EAAAC,MAAA;EAAzB,SAAAD,IAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IASE;IACOF,KAAA,CAAAG,IAAI,GAAW,KAAK;;EA+B7B;EAxCE;;;;EAION,GAAA,CAAAO,iBAAiB,GAAxB;IACE,OAAOT,eAAe;EACxB,CAAC;EAKD;;;;EAIOE,GAAA,CAAAQ,SAAA,CAAAC,UAAU,GAAjB,UAAkBC,IAAI;IACpB,IAAI,CAACC,YAAY,CAAC;MAAED,IAAI,EAAAA;IAAA,CAAE,CAAC;IACnB,IAAAE,MAAM,GAAK,IAAI,CAACC,OAAO,CAAAD,MAAjB;IAEd,IAAME,YAAY,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC,UAACC,CAAC;MAAK,OAAAA,CAAC,CAACC,EAAE,KAAKpB,gBAAgB;IAAzB,CAAyB,CAAC;IAC5E,IAAIe,YAAY,EAAE;MAChBA,YAAY,CAACJ,IAAI,CAACA,IAAI,CAAC;;IAGzB,IAAI,CAACK,KAAK,CAACN,UAAU,CAACZ,aAAa,CAACa,IAAI,EAAEE,MAAM,CAAC,CAAC;EACpD,CAAC;EAED;;;EAGUZ,GAAA,CAAAQ,SAAA,CAAAD,iBAAiB,GAA3B;IACE,OAAOP,GAAG,CAACO,iBAAiB,EAAE;EAChC,CAAC;EAED;;;EAGUP,GAAA,CAAAQ,SAAA,CAAAY,gBAAgB,GAA1B;IACE,OAAOxB,OAAO;EAChB,CAAC;EACH,OAAAI,GAAC;AAAD,CAAC,CAzCwBL,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}