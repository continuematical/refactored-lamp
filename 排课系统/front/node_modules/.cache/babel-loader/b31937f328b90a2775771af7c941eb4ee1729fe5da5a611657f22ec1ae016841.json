{"ast":null,"code":"import { isArray } from '@antv/util';\nimport { flow, deepAssign } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE } from '../constant';\nimport { conversionTagComponent, transformData } from './common';\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params) {\n  var _a;\n  var chart = params.chart,\n    options = params.options;\n  var _b = options.data,\n    data = _b === void 0 ? [] : _b,\n    yField = options.yField;\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale((_a = {}, _a[yField] = {\n    sync: true\n  }, _a));\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    xField = options.xField,\n    yField = options.yField,\n    color = options.color,\n    compareField = options.compareField,\n    isTransposed = options.isTransposed,\n    tooltip = options.tooltip,\n    maxSize = options.maxSize,\n    minSize = options.minSize,\n    label = options.label,\n    funnelStyle = options.funnelStyle,\n    state = options.state,\n    showFacetTitle = options.showFacetTitle;\n  chart.facet('mirror', {\n    fields: [compareField],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !isTransposed,\n    padding: isTransposed ? 0 : [32, 0, 0, 0],\n    showTitle: showFacetTitle,\n    eachView: function (view, facet) {\n      var index = isTransposed ? facet.rowIndex : facet.columnIndex;\n      if (!isTransposed) {\n        view.coordinate({\n          type: 'rect',\n          actions: [['transpose'], ['scale', index === 0 ? -1 : 1, -1]]\n        });\n      }\n      var formatterData = transformData(facet.data, data, {\n        yField: yField,\n        maxSize: maxSize,\n        minSize: minSize\n      });\n      view.data(formatterData);\n      // 绘制图形\n      var _a = getTooltipMapping(tooltip, [xField, yField, compareField]),\n        fields = _a.fields,\n        formatter = _a.formatter;\n      var defaultFacetLabel = isTransposed ? {\n        offset: index === 0 ? 10 : -23,\n        position: index === 0 ? 'bottom' : 'top'\n      } : {\n        offset: 10,\n        position: 'left',\n        style: {\n          textAlign: index === 0 ? 'end' : 'start'\n        }\n      };\n      baseGeometry({\n        chart: view,\n        options: {\n          type: 'interval',\n          xField: xField,\n          yField: FUNNEL_MAPPING_VALUE,\n          colorField: xField,\n          tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n          mapping: {\n            // todo 暂时不提供 金字塔 shape，后续需要自定义下形状\n            shape: 'funnel',\n            tooltip: formatter,\n            color: color,\n            style: funnelStyle\n          },\n          label: label === false ? false : deepAssign({}, defaultFacetLabel, label),\n          state: state\n        }\n      });\n    }\n  });\n  return params;\n}\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params) {\n  var chart = params.chart,\n    options = params.options;\n  var conversionTag = options.conversionTag,\n    isTransposed = options.isTransposed;\n  // @ts-ignore\n  chart.once('beforepaint', function () {\n    chart.views.forEach(function (view, viewIndex) {\n      var getLineCoordinate = function (datum, datumIndex, data, initLineOption) {\n        var ratio = viewIndex === 0 ? -1 : 1;\n        return deepAssign({}, initLineOption, {\n          start: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE]],\n          end: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE] + 0.05],\n          text: isTransposed ? {\n            style: {\n              textAlign: 'start'\n            }\n          } : {\n            offsetX: conversionTag !== false ? ratio * conversionTag.offsetX : 0,\n            style: {\n              textAlign: viewIndex === 0 ? 'end' : 'start'\n            }\n          }\n        });\n      };\n      conversionTagComponent(getLineCoordinate)(deepAssign({}, {\n        chart: view,\n        options: options\n      }));\n    });\n  });\n  return params;\n}\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\nexport function compareFunnel(params) {\n  return flow(field, geometry, conversionTag)(params);\n}","map":{"version":3,"names":["isArray","flow","deepAssign","getTooltipMapping","geometry","baseGeometry","FUNNEL_PERCENT","FUNNEL_CONVERSATION","FUNNEL_MAPPING_VALUE","conversionTagComponent","transformData","field","params","chart","options","_b","data","yField","scale","_a","sync","xField","color","compareField","isTransposed","tooltip","maxSize","minSize","label","funnelStyle","state","showFacetTitle","facet","fields","transpose","padding","showTitle","eachView","view","index","rowIndex","columnIndex","coordinate","type","actions","formatterData","formatter","defaultFacetLabel","offset","position","style","textAlign","colorField","tooltipFields","concat","mapping","shape","conversionTag","once","views","forEach","viewIndex","getLineCoordinate","datum","datumIndex","initLineOption","ratio","start","end","text","offsetX","compareFunnel"],"sources":["../../../../src/plots/funnel/geometries/compare.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { isArray } from '@antv/util';\nimport { flow, deepAssign } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { Datum, Data } from '../../../types/common';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { FunnelOptions } from '../types';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE } from '../constant';\nimport { conversionTagComponent, transformData } from './common';\n\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale({\n    [yField]: {\n      sync: true,\n    },\n  });\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const {\n    data,\n    xField,\n    yField,\n    color,\n    compareField,\n    isTransposed,\n    tooltip,\n    maxSize,\n    minSize,\n    label,\n    funnelStyle,\n    state,\n    showFacetTitle,\n  } = options;\n\n  chart.facet('mirror', {\n    fields: [compareField],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !isTransposed,\n    padding: isTransposed ? 0 : [32, 0, 0, 0],\n    showTitle: showFacetTitle,\n    eachView(view, facet) {\n      const index = isTransposed ? facet.rowIndex : facet.columnIndex;\n\n      if (!isTransposed) {\n        view.coordinate({\n          type: 'rect',\n          actions: [['transpose'], ['scale', index === 0 ? -1 : 1, -1]],\n        });\n      }\n\n      const formatterData = transformData(facet.data, data, {\n        yField,\n        maxSize,\n        minSize,\n      });\n\n      view.data(formatterData);\n\n      // 绘制图形\n      const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, compareField]);\n\n      const defaultFacetLabel = isTransposed\n        ? {\n            offset: index === 0 ? 10 : -23,\n            position: (index === 0 ? 'bottom' : 'top') as Types.IntervalGeometryLabelPosition,\n          }\n        : {\n            offset: 10,\n            position: 'left' as Types.IntervalGeometryLabelPosition,\n            style: {\n              textAlign: index === 0 ? 'end' : 'start',\n            },\n          };\n\n      baseGeometry({\n        chart: view,\n        options: {\n          type: 'interval',\n          xField: xField,\n          yField: FUNNEL_MAPPING_VALUE,\n          colorField: xField,\n          tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n          mapping: {\n            // todo 暂时不提供 金字塔 shape，后续需要自定义下形状\n            shape: 'funnel',\n            tooltip: formatter,\n            color,\n            style: funnelStyle,\n          },\n          label: label === false ? false : deepAssign({}, defaultFacetLabel, label),\n          state,\n        },\n      });\n    },\n  });\n\n  return params;\n}\n\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { conversionTag, isTransposed } = options;\n  // @ts-ignore\n  chart.once('beforepaint', () => {\n    chart.views.forEach((view, viewIndex) => {\n      const getLineCoordinate = (\n        datum: Datum,\n        datumIndex: number,\n        data: Data,\n        initLineOption: Record<string, any>\n      ): Types.LineOption => {\n        const ratio = viewIndex === 0 ? -1 : 1;\n        return deepAssign({}, initLineOption, {\n          start: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE]],\n          end: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE] + 0.05],\n          text: isTransposed\n            ? {\n                style: {\n                  textAlign: 'start',\n                },\n              }\n            : {\n                offsetX: conversionTag !== false ? ratio * conversionTag.offsetX : 0,\n                style: {\n                  textAlign: viewIndex === 0 ? 'end' : 'start',\n                },\n              },\n        });\n      };\n\n      conversionTagComponent(getLineCoordinate)(\n        deepAssign(\n          {},\n          {\n            chart: view,\n            options,\n          }\n        )\n      );\n    });\n  });\n  return params;\n}\n\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\nexport function compareFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry, conversionTag)(params);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}