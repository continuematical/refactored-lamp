{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { isFunction, get } from '@antv/util';\nimport { tooltip, interaction, animation, theme, scale, state } from '../../adaptor/common';\nimport { flow, deepAssign } from '../../utils';\nimport { point } from '../../adaptor/geometries';\nimport { transform } from './utils';\nimport { WORD_CLOUD_COLOR_FIELD } from './constant';\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var colorField = options.colorField,\n    color = options.color;\n  var data = transform(params);\n  chart.data(data);\n  var p = deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField && WORD_CLOUD_COLOR_FIELD,\n      rawFields: isFunction(color) && __spreadArrays(get(options, 'rawFields', []), ['datum']),\n      point: {\n        color: color,\n        shape: 'word-cloud'\n      }\n    }\n  });\n  var ext = point(p).ext;\n  ext.geometry.label(false);\n  chart.coordinate().reflect('y');\n  chart.axis(false);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params) {\n  return flow(scale({\n    x: {\n      nice: false\n    },\n    y: {\n      nice: false\n    }\n  }))(params);\n}\n/**\n * 词云图 legend 配置\n * @param params\n */\nexport function legend(params) {\n  var chart = params.chart,\n    options = params.options;\n  var legend = options.legend,\n    colorField = options.colorField;\n  if (legend === false) {\n    chart.legend(false);\n  } else if (colorField) {\n    chart.legend(WORD_CLOUD_COLOR_FIELD, legend);\n  }\n  return params;\n}\n/**\n * 词云图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(geometry, meta, tooltip, legend, interaction, animation, theme, state)(params);\n}","map":{"version":3,"names":["isFunction","get","tooltip","interaction","animation","theme","scale","state","flow","deepAssign","point","transform","WORD_CLOUD_COLOR_FIELD","geometry","params","chart","options","colorField","color","data","p","xField","yField","seriesField","rawFields","__spreadArrays","shape","ext","label","coordinate","reflect","axis","meta","x","nice","y","legend","adaptor"],"sources":["../../../src/plots/word-cloud/adaptor.ts"],"sourcesContent":["import { isFunction, get } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { tooltip, interaction, animation, theme, scale, state } from '../../adaptor/common';\nimport { flow, deepAssign } from '../../utils';\nimport { point } from '../../adaptor/geometries';\nimport { WordCloudOptions } from './types';\nimport { transform } from './utils';\nimport { WORD_CLOUD_COLOR_FIELD } from './constant';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<WordCloudOptions>): Params<WordCloudOptions> {\n  const { chart, options } = params;\n  const { colorField, color } = options;\n  const data = transform(params);\n\n  chart.data(data);\n\n  const p = deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField && WORD_CLOUD_COLOR_FIELD,\n      rawFields: isFunction(color) && [...get(options, 'rawFields', []), 'datum'],\n      point: {\n        color,\n        shape: 'word-cloud',\n      },\n    },\n  });\n\n  const { ext } = point(p);\n  ext.geometry.label(false);\n\n  chart.coordinate().reflect('y');\n  chart.axis(false);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<WordCloudOptions>): Params<WordCloudOptions> {\n  return flow(\n    scale({\n      x: { nice: false },\n      y: { nice: false },\n    })\n  )(params);\n}\n\n/**\n * 词云图 legend 配置\n * @param params\n */\nexport function legend(params: Params<WordCloudOptions>): Params<WordCloudOptions> {\n  const { chart, options } = params;\n  const { legend, colorField } = options;\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (colorField) {\n    chart.legend(WORD_CLOUD_COLOR_FIELD, legend);\n  }\n\n  return params;\n}\n\n/**\n * 词云图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<WordCloudOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(geometry, meta, tooltip, legend, interaction, animation, theme, state)(params);\n}\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,GAAG,QAAQ,YAAY;AAE5C,SAASC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,QAAQ,sBAAsB;AAC3F,SAASC,IAAI,EAAEC,UAAU,QAAQ,aAAa;AAC9C,SAASC,KAAK,QAAQ,0BAA0B;AAEhD,SAASC,SAAS,QAAQ,SAAS;AACnC,SAASC,sBAAsB,QAAQ,YAAY;AAEnD;;;;AAIA,SAASC,QAAQA,CAACC,MAAgC;EACxC,IAAAC,KAAK,GAAcD,MAAM,CAAAC,KAApB;IAAEC,OAAO,GAAKF,MAAM,CAAAE,OAAX;EACd,IAAAC,UAAU,GAAYD,OAAO,CAAAC,UAAnB;IAAEC,KAAK,GAAKF,OAAO,CAAAE,KAAZ;EACzB,IAAMC,IAAI,GAAGR,SAAS,CAACG,MAAM,CAAC;EAE9BC,KAAK,CAACI,IAAI,CAACA,IAAI,CAAC;EAEhB,IAAMC,CAAC,GAAGX,UAAU,CAAC,EAAE,EAAEK,MAAM,EAAE;IAC/BE,OAAO,EAAE;MACPK,MAAM,EAAE,GAAG;MACXC,MAAM,EAAE,GAAG;MACXC,WAAW,EAAEN,UAAU,IAAIL,sBAAsB;MACjDY,SAAS,EAAExB,UAAU,CAACkB,KAAK,CAAC,IAAAO,cAAA,CAAQxB,GAAG,CAACe,OAAO,EAAE,WAAW,EAAE,EAAE,CAAC,GAAE,OAAO,EAAC;MAC3EN,KAAK,EAAE;QACLQ,KAAK,EAAAA,KAAA;QACLQ,KAAK,EAAE;;;GAGZ,CAAC;EAEM,IAAAC,GAAG,GAAKjB,KAAK,CAACU,CAAC,CAAC,CAAAO,GAAb;EACXA,GAAG,CAACd,QAAQ,CAACe,KAAK,CAAC,KAAK,CAAC;EAEzBb,KAAK,CAACc,UAAU,EAAE,CAACC,OAAO,CAAC,GAAG,CAAC;EAC/Bf,KAAK,CAACgB,IAAI,CAAC,KAAK,CAAC;EAEjB,OAAOjB,MAAM;AACf;AAEA;;;;AAIA,SAASkB,IAAIA,CAAClB,MAAgC;EAC5C,OAAON,IAAI,CACTF,KAAK,CAAC;IACJ2B,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAE;IAClBC,CAAC,EAAE;MAAED,IAAI,EAAE;IAAK;GACjB,CAAC,CACH,CAACpB,MAAM,CAAC;AACX;AAEA;;;;AAIA,OAAM,SAAUsB,MAAMA,CAACtB,MAAgC;EAC7C,IAAAC,KAAK,GAAcD,MAAM,CAAAC,KAApB;IAAEC,OAAO,GAAKF,MAAM,CAAAE,OAAX;EACd,IAAAoB,MAAM,GAAiBpB,OAAO,CAAAoB,MAAxB;IAAEnB,UAAU,GAAKD,OAAO,CAAAC,UAAZ;EAE1B,IAAImB,MAAM,KAAK,KAAK,EAAE;IACpBrB,KAAK,CAACqB,MAAM,CAAC,KAAK,CAAC;GACpB,MAAM,IAAInB,UAAU,EAAE;IACrBF,KAAK,CAACqB,MAAM,CAACxB,sBAAsB,EAAEwB,MAAM,CAAC;;EAG9C,OAAOtB,MAAM;AACf;AAEA;;;;;AAKA,OAAM,SAAUuB,OAAOA,CAACvB,MAAgC;EACtD;EACAN,IAAI,CAACK,QAAQ,EAAEmB,IAAI,EAAE9B,OAAO,EAAEkC,MAAM,EAAEjC,WAAW,EAAEC,SAAS,EAAEC,KAAK,EAAEE,KAAK,CAAC,CAACO,MAAM,CAAC;AACrF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}