{"ast":null,"code":"import { changePass } from \"./api.js\";\nimport SetPassword from \"@/views/template/set-password\";\nexport default {\n  name: \"change_pass\",\n  components: {\n    SetPassword\n  },\n  data() {\n    const valideRePassword = (rule, value, callback) => {\n      if (value !== this.editPasswordForm.newPass) {\n        callback(new Error(\"两次输入密码不一致\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      savePassLoading: false,\n      editPasswordForm: {\n        oldPass: \"\",\n        newPass: \"\",\n        rePass: \"\"\n      },\n      strength: \"\",\n      passwordValidate: {\n        oldPass: [{\n          required: true,\n          message: \"请输入原密码\",\n          trigger: \"blur\"\n        }],\n        newPass: [{\n          required: true,\n          message: \"请输入新密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          message: \"请至少输入6个字符\",\n          trigger: \"blur\"\n        }, {\n          max: 32,\n          message: \"最多输入32个字符\",\n          trigger: \"blur\"\n        }],\n        rePass: [{\n          required: true,\n          message: \"请再次输入新密码\",\n          trigger: \"blur\"\n        }, {\n          validator: valideRePassword,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    changeInputPass(v, grade, strength) {\n      this.strength = strength;\n    },\n    saveEditPass() {\n      let params = {\n        password: this.editPasswordForm.oldPass,\n        newPass: this.editPasswordForm.newPass,\n        passStrength: this.strength\n      };\n      this.$refs[\"editPasswordForm\"].validate(valid => {\n        if (valid) {\n          this.savePassLoading = true;\n          changePass(params).then(res => {\n            this.savePassLoading = false;\n            if (res.success) {\n              this.$Modal.success({\n                title: \"修改密码成功\",\n                content: \"修改密码成功，需重新登录\",\n                onOk: () => {\n                  this.$store.commit(\"logout\", this);\n                  this.$store.commit(\"clearOpenedSubmenu\");\n                  this.$router.push({\n                    name: \"login\"\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    cancelEditPass() {\n      this.$store.commit(\"removeTag\", \"password\");\n      localStorage.pageOpenedList = JSON.stringify(this.$store.state.app.pageOpenedList);\n      let lastPageName = \"\";\n      let length = this.$store.state.app.pageOpenedList.length;\n      if (length > 1) {\n        lastPageName = this.$store.state.app.pageOpenedList[length - 1].name;\n      } else {\n        lastPageName = this.$store.state.app.pageOpenedList[0].name;\n      }\n      this.$router.push({\n        name: lastPageName\n      });\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["changePass","SetPassword","name","components","data","valideRePassword","rule","value","callback","editPasswordForm","newPass","Error","savePassLoading","oldPass","rePass","strength","passwordValidate","required","message","trigger","min","max","validator","methods","changeInputPass","v","grade","saveEditPass","params","password","passStrength","$refs","validate","valid","then","res","success","$Modal","title","content","onOk","$store","commit","$router","push","cancelEditPass","localStorage","pageOpenedList","JSON","stringify","state","app","lastPageName","length","mounted"],"sources":["src/views/password/password.vue"],"sourcesContent":["\n<template>\n<div>\n    <Card class=\"change-pass\">\n        <p slot=\"title\">\n            <Icon type=\"key\"></Icon>修改密码\n        </p>\n        <div>\n            <Form ref=\"editPasswordForm\" :model=\"editPasswordForm\" :label-width=\"100\" label-position=\"right\" :rules=\"passwordValidate\" style=\"width:450px\">\n                <FormItem label=\"原密码\" prop=\"oldPass\">\n                    <Input type=\"password\" v-model=\"editPasswordForm.oldPass\" placeholder=\"请输入现在使用的密码\"></Input>\n                </FormItem>\n                <FormItem label=\"新密码\" prop=\"newPass\">\n                    <SetPassword v-model=\"editPasswordForm.newPass\" @on-change=\"changeInputPass\" />\n                </FormItem>\n                <FormItem label=\"确认新密码\" prop=\"rePass\">\n                    <Input type=\"password\" v-model=\"editPasswordForm.rePass\" placeholder=\"请再次输入新密码\"></Input>\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" style=\"width: 100px;margin-right:5px\" :loading=\"savePassLoading\" @click=\"saveEditPass\">保存</Button>\n                    <Button @click=\"cancelEditPass\">取消</Button>\n                </FormItem>\n            </Form>\n        </div>\n    </Card>\n</div>\n</template>\n\n<script>\nimport {\n    changePass\n} from \"./api.js\";\nimport SetPassword from \"@/views/template/set-password\";\nexport default {\n    name: \"change_pass\",\n    components: {\n        SetPassword\n    },\n    data() {\n        const valideRePassword = (rule, value, callback) => {\n            if (value !== this.editPasswordForm.newPass) {\n                callback(new Error(\"两次输入密码不一致\"));\n            } else {\n                callback();\n            }\n        };\n        return {\n            savePassLoading: false,\n            editPasswordForm: {\n                oldPass: \"\",\n                newPass: \"\",\n                rePass: \"\"\n            },\n            strength: \"\",\n            passwordValidate: {\n                oldPass: [{\n                    required: true,\n                    message: \"请输入原密码\",\n                    trigger: \"blur\"\n                }],\n                newPass: [{\n                        required: true,\n                        message: \"请输入新密码\",\n                        trigger: \"blur\"\n                    },\n                    {\n                        min: 6,\n                        message: \"请至少输入6个字符\",\n                        trigger: \"blur\"\n                    },\n                    {\n                        max: 32,\n                        message: \"最多输入32个字符\",\n                        trigger: \"blur\"\n                    }\n                ],\n                rePass: [{\n                        required: true,\n                        message: \"请再次输入新密码\",\n                        trigger: \"blur\"\n                    },\n                    {\n                        validator: valideRePassword,\n                        trigger: \"blur\"\n                    }\n                ]\n            }\n        };\n    },\n    methods: {\n        changeInputPass(v, grade, strength) {\n            this.strength = strength;\n        },\n        saveEditPass() {\n            let params = {\n                password: this.editPasswordForm.oldPass,\n                newPass: this.editPasswordForm.newPass,\n                passStrength: this.strength\n            };\n            this.$refs[\"editPasswordForm\"].validate(valid => {\n                if (valid) {\n                    this.savePassLoading = true;\n                    changePass(params).then(res => {\n                        this.savePassLoading = false;\n                        if (res.success) {\n                            this.$Modal.success({\n                                title: \"修改密码成功\",\n                                content: \"修改密码成功，需重新登录\",\n                                onOk: () => {\n                                    this.$store.commit(\"logout\", this);\n                                    this.$store.commit(\"clearOpenedSubmenu\");\n                                    this.$router.push({\n                                        name: \"login\"\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        },\n        cancelEditPass() {\n            this.$store.commit(\"removeTag\", \"password\");\n            localStorage.pageOpenedList = JSON.stringify(\n                this.$store.state.app.pageOpenedList\n            );\n            let lastPageName = \"\";\n            let length = this.$store.state.app.pageOpenedList.length;\n            if (length > 1) {\n                lastPageName = this.$store.state.app.pageOpenedList[length - 1].name;\n            } else {\n                lastPageName = this.$store.state.app.pageOpenedList[0].name;\n            }\n            this.$router.push({\n                name: lastPageName\n            });\n        }\n    },\n    mounted() {}\n};\n</script>\n<style lang=\"less\">\n.change-pass {\n    &-btn-box {\n        margin-bottom: 10px;\n\n        button {\n            padding-left: 0;\n\n            span {\n                color: #2D8CF0;\n                transition: all .2s;\n            }\n\n            span:hover {\n                color: #0C25F1;\n                transition: all .2s;\n            }\n        }\n    }\n}\n</style>\n"],"mappings":"AA6BA,SACAA,UAAA,QACA;AACA,OAAAC,WAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA,UAAAE,gBAAA,CAAAC,OAAA;QACAF,QAAA,KAAAG,KAAA;MACA;QACAH,QAAA;MACA;IACA;IACA;MACAI,eAAA;MACAH,gBAAA;QACAI,OAAA;QACAH,OAAA;QACAI,MAAA;MACA;MACAC,QAAA;MACAC,gBAAA;QACAH,OAAA;UACAI,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;QACAT,OAAA;UACAO,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,GACA;UACAC,GAAA;UACAF,OAAA;UACAC,OAAA;QACA,GACA;UACAE,GAAA;UACAH,OAAA;UACAC,OAAA;QACA,EACA;QACAL,MAAA;UACAG,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,GACA;UACAG,SAAA,EAAAjB,gBAAA;UACAc,OAAA;QACA;MAEA;IACA;EACA;EACAI,OAAA;IACAC,gBAAAC,CAAA,EAAAC,KAAA,EAAAX,QAAA;MACA,KAAAA,QAAA,GAAAA,QAAA;IACA;IACAY,aAAA;MACA,IAAAC,MAAA;QACAC,QAAA,OAAApB,gBAAA,CAAAI,OAAA;QACAH,OAAA,OAAAD,gBAAA,CAAAC,OAAA;QACAoB,YAAA,OAAAf;MACA;MACA,KAAAgB,KAAA,qBAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAArB,eAAA;UACAZ,UAAA,CAAA4B,MAAA,EAAAM,IAAA,CAAAC,GAAA;YACA,KAAAvB,eAAA;YACA,IAAAuB,GAAA,CAAAC,OAAA;cACA,KAAAC,MAAA,CAAAD,OAAA;gBACAE,KAAA;gBACAC,OAAA;gBACAC,IAAA,EAAAA,CAAA;kBACA,KAAAC,MAAA,CAAAC,MAAA;kBACA,KAAAD,MAAA,CAAAC,MAAA;kBACA,KAAAC,OAAA,CAAAC,IAAA;oBACA1C,IAAA;kBACA;gBACA;cACA;YACA;UACA;QACA;MACA;IACA;IACA2C,eAAA;MACA,KAAAJ,MAAA,CAAAC,MAAA;MACAI,YAAA,CAAAC,cAAA,GAAAC,IAAA,CAAAC,SAAA,CACA,KAAAR,MAAA,CAAAS,KAAA,CAAAC,GAAA,CAAAJ,cACA;MACA,IAAAK,YAAA;MACA,IAAAC,MAAA,QAAAZ,MAAA,CAAAS,KAAA,CAAAC,GAAA,CAAAJ,cAAA,CAAAM,MAAA;MACA,IAAAA,MAAA;QACAD,YAAA,QAAAX,MAAA,CAAAS,KAAA,CAAAC,GAAA,CAAAJ,cAAA,CAAAM,MAAA,MAAAnD,IAAA;MACA;QACAkD,YAAA,QAAAX,MAAA,CAAAS,KAAA,CAAAC,GAAA,CAAAJ,cAAA,IAAA7C,IAAA;MACA;MACA,KAAAyC,OAAA,CAAAC,IAAA;QACA1C,IAAA,EAAAkD;MACA;IACA;EACA;EACAE,QAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}